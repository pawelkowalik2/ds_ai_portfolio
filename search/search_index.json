{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to my portfolio","text":"<p>Hi! My name is Pawe\u0142 Kowalik, and I\u2019m glad to have you here. </p>"},{"location":"#about-me","title":"About me","text":"<p>I am a software engineer with a strong background in C/C++ and a growing focus on AI and Data Science.  I enjoy using my programming experience to explore AI techniques and automate various processes.  I am continuously learning and expanding my skills to deepen my understanding of AI and Data Science.</p>"},{"location":"#find-me-here","title":"Find me here","text":"<p>   GitHub</p> <p> LinkedIn</p>"},{"location":"alike/","title":"Alike","text":"<p>Imagine answering a few simple questions: your age, education, favorite pet, favorite place to spend free time, and gender.</p> <p>Alike takes this small set of information and instantly places you in a group of people with similar interests. You can see who else belongs to your group, explore distributions of age, education, pets, and favorite places, and even compare yourself to the rest of the participants.</p> <p>Try it yourself here: Alike Or check it here: GitHub</p>"},{"location":"alike/#how-its-made","title":"How it\u2019s made","text":"<p>Alike is powered by a full end-to-end data pipeline that transforms survey inputs into meaningful insights:</p> <ul> <li>Data Collection: Users provide basic survey information (age, education, favorite pet, favorite place, gender).</li> <li>Clustering: The pipeline predicts which of 8 clusters each participant belongs to using PyCaret.</li> <li>Cluster Names and Descriptions: Each cluster is enriched with human-readable names and descriptions, generated automatically using a language model (LLM).</li> <li>Interactive Visualization: Results are displayed in Streamlit, with Plotly histograms showing distributions of age, education, pets, favorite places, and gender within each cluster.</li> <li>Exploratory Analysis: All survey data can be explored using YData Profiling, embedded directly in the app.</li> </ul> <p>This combination of automatic grouping based on patterns in the data, generative AI for cluster descriptions, and interactive visualization highlights the full data product lifecycle, from raw survey responses to actionable, user-friendly insights.</p>"},{"location":"alike/#schema","title":"Schema","text":""},{"location":"essenza/","title":"Essenza","text":"<p>Essenza creates perfect summaries of any audio or video you upload. It also provides full transcriptions of your files. Additionally, you can record yourself directly with your microphone to test the app, even if you don\u2019t have an audio or video file at hand.</p> <p>Try it yourself here: Essenza</p> <p>Or check it here: GitHub</p>"},{"location":"essenza/#how-its-made","title":"How it's made","text":"<p>This app lets you record your voice or upload audio and video files to generate full transcriptions and concise summaries. If a video file is uploaded, the audio track is automatically extracted using pydub and BytesIO.</p> <p>Audio can be recorded directly in the browser thanks to audiorecorder, and all files are handled in memory using BytesIO without the need to save them locally. Checksums are computed using hashlib (md5) to detect changes and avoid reprocessing the same audio.</p> <p>The transcription is performed by OpenAI\u2019s Whisper model, while summaries are generated using GPT-4o-mini, both accessed through the openai library. The web interface is built with Streamlit, which provides an interactive and responsive experience for uploading, recording, and playing audio, as well as displaying the resulting transcriptions and summaries.</p> <p>Users need to provide their OpenAI API key to securely access the AI services.</p>"},{"location":"essenza/#schema","title":"Schema:","text":""},{"location":"marathon/","title":"Runner","text":"<p>Runner helps you estimate your half-marathon finish time based on your personal basic information. You can either enter your information manually or simply chat with the app to provide your name, year of birth, gender, and 5 km run time.</p> <p>Try it yourself here: Runner</p> <p>Or check it here: GitHub</p>"},{"location":"marathon/#how-its-made","title":"How it's made","text":""},{"location":"marathon/#first-things-first-pipeline","title":"First Things First \u2013 Pipeline","text":"<p>The main goal of this app is to predict your half-marathon finish time. To achieve this, I needed to create a proper pipeline.  </p> <p>For this purpose, I used Wroc\u0142aw half-marathon data from 2023 and 2024, which were uploaded to my DigitalOcean bucket.  I also used Pandera to create schemas for both the raw data and the data after transformations, right before starting the PyCaret experiment.  </p> <p>After performing proper EDA,  I applied necessary transformations to prepare the data for the next step: creating the experiment.  </p> <p>I also tried to tune the experiment using normalization and additional transformations,  but the results were worse than the original, so I decided to discard those changes.</p> <p>For the prediction, I used PyCaret\u2019s regression model.</p>"},{"location":"marathon/#creating-the-app","title":"Creating the App","text":"<p>After preparing the model and pipeline, the next step was to build a user-friendly application.  I used Streamlit to create an interactive interface where users can provide their data and get predictions.  </p> <p>The app allows users to enter information in two ways: 1. Manual Input: Users can select their gender, enter their birth year, and provide their 5 km time. 2. Chat Interface: Users can simply type a message, and a simple AI assistant (powered by OpenAI and monitored by Langfuse)  extracts the necessary informations. This allows for a more natural interaction.</p> <p>Once the data is collected, it is transformed into the required format and passed to the trained PyCaret model.  The app then predicts the user's half-marathon finish time and displays it in a readable HH:MM:SS format.  </p> <p>The combination of a robust ML pipeline and a streamlined, interactive interface ensures that predictions are accurate, reliable,  and easy to access for anyone interested in estimating their half-marathon performance.</p>"},{"location":"marathon/#schemas","title":"Schemas","text":"<p>Pipeline: </p> <p>App: </p>"}]}